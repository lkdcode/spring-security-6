plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // --------- mapper
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // --------- jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // --------- swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    // --------- Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // --------- Flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // --------- Mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // --------- google guava
    implementation group: 'com.google.guava', name: 'guava', version: '11.0.2'

    // --------- DataJpaTest
    compileOnly 'org.projectlombok:lombok'
    compileOnly('org.springframework.boot:spring-boot-starter-test')

    testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

// Compile Time VM Options (1)
compileJava {
    options.compilerArgs += ['--enable-preview', '-Amapstruct.defaultComponentModel=spring']
}

//// Compile Time VM Options (2)
compileTestJava {
    options.compilerArgs += ['--enable-preview', '-Amapstruct.defaultComponentModel=spring']
}

tasks.named('test') {
    useJUnitPlatform()
}
